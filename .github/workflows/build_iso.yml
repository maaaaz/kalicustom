name: Kali VM customization build script (ISO)

on: 
  workflow_dispatch:
      # inputs:
      #   VM_URL:
      #     description: URL of the .7z Kali VM
      #     required: true
      #     default: https://cdimage.kali.org/kali-2024.1/kali-linux-2024.1-virtualbox-amd64.7z
        
      #   VM_HASH:
      #     description: Expected SHA256 hash 
      #     required: true
      #     default: 80ba5fdd6037f9261a5f49a7f18a0abb231551a1aec2d97da2344c2a0e72ced8

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Collect and install prerequisites
      run: |
        set -xe
        
        # silence APT
        APT_PARAMS='sudo apt -y -qq -o=Dpkg::Use-Pty=0'
        $APT_PARAMS update && $APT_PARAMS install git live-build simple-cdd cdebootstrap curl

        cd /tmp/

        #################################################################################################################
        # patching debootstrap because it is buggy on Ubuntu Jammy 22.04
        wget -nv "http://ports.ubuntu.com/pool/main/d/debootstrap/debootstrap_1.0.134ubuntu1_all.deb" -O debootstrap.deb
        sudo dpkg -i ./debootstrap.deb
        #################################################################################################################

        wget -nv "https://archive.kali.org/kali/pool/main/l/live-build/live-build_20230502%2Bkali4_all.deb" -O live_build.deb
        wget -nv "https://http.kali.org/pool/main/k/kali-archive-keyring/kali-archive-keyring_2024.1_all.deb" -O kali_keyring.deb
        sudo dpkg -i ./live_build.deb
        sudo dpkg -i ./kali_keyring.deb

        wget -nv "https://archive.org/download/ia-pex/ia" -O "./ia"
        sudo chmod +x "./ia"

        wget -nv "https://github.com/maaaaz/dotfiles/raw/master/.vimrc" -O ".vimrc"

    - name: Setup environment variables
      run: |
        set -xe

        CUSTOM_RESOURCES_DIR="$GITHUB_WORKSPACE/_resources"
        echo "CUSTOM_RESOURCES_DIR=$CUSTOM_RESOURCES_DIR" >> $GITHUB_ENV
        
        MNT_ROOT="/mnt"
        LIVE_BUILD_DIR="$MNT_ROOT/live-build-config"
        LIVE_BUILD_IMAGES_DIR="$LIVE_BUILD_DIR/images"
        echo "MNT_ROOT=$MNT_ROOT" >> $GITHUB_ENV
        echo "LIVE_BUILD_DIR=$LIVE_BUILD_DIR" >> $GITHUB_ENV
        echo "LIVE_BUILD_IMAGES_DIR=$LIVE_BUILD_IMAGES_DIR" >> $GITHUB_ENV

        DEBOOTSTRAP_SCRIPTS_DIR="/usr/share/debootstrap/scripts"
        echo "DEBOOTSTRAP_SCRIPTS_DIR=$DEBOOTSTRAP_SCRIPTS_DIR" >> $GITHUB_ENV

        SPLASHSCREEN_DIR="$LIVE_BUILD_DIR/kali-config/common/bootloaders/grub-pc"
        echo "SPLASHSCREEN_DIR=$SPLASHSCREEN_DIR" >> $GITHUB_ENV

        LIVE_HOOKS_DIR="$LIVE_BUILD_DIR/kali-config/common/hooks/live"
        echo "LIVE_HOOKS_DIR=$LIVE_HOOKS_DIR" >> $GITHUB_ENV

        ISO_SQUASHFS_ROOT="$LIVE_BUILD_DIR/kali-config/common/includes.chroot"
        echo "ISO_SQUASHFS_ROOT=$ISO_SQUASHFS_ROOT" >> $GITHUB_ENV
        
        KALI_RELEASE_NAME="kali-iso-maaaaz-edition-$(date '+%Y%m%d')"
        echo "KALI_RELEASE_NAME=$KALI_RELEASE_NAME" >> $GITHUB_ENV
        
        
        

    - name: Prepare environment
      run: |
        set -xe
        
        cd $DEBOOTSTRAP_SCRIPTS_DIR
        (echo "default_mirror http://http.kali.org/kali"; sed -e "s/debian-archive-keyring.gpg/kali-archive-keyring.gpg/g" sid) > /tmp/kali
        sudo mv /tmp/kali .

        cd $MNT_ROOT
        sudo git clone "https://gitlab.com/kalilinux/build-scripts/live-build-config.git" $LIVE_BUILD_DIR

        # changing boot splashscreen
        sudo cp -f $CUSTOM_RESOURCES_DIR/splash.png $SPLASHSCREEN_DIR/splash.png
        
        # executing chrooted scripts
        sudo cp -f $CUSTOM_RESOURCES_DIR/customization.chroot $LIVE_HOOKS_DIR/customization.chroot
       
        # placing files in the ISO
        sudo cp -f $CUSTOM_RESOURCES_DIR/0031-kali-user-setup $ISO_SQUASHFS_ROOT/usr/lib/live/config/0031-kali-user-setup
        sudo cp -f $CUSTOM_RESOURCES_DIR/inputrc $ISO_ROOT/etc/inputrc

        ## qterminal
        sudo mkdir -p $ISO_SQUASHFS_ROOT/home/kali/.config/qterminal.org/
        sudo cp -f $CUSTOM_RESOURCES_DIR/qterminal.ini $ISO_SQUASHFS_ROOT/home/kali/.config/qterminal.org/qterminal.ini

        ## vimrc + bashrc in kali and root user homes
        sudo cp -f /tmp/.vimrc $ISO_SQUASHFS_ROOT/home/kali/.vimrc
        sudo cp -f $CUSTOM_RESOURCES_DIR/bashrc $ISO_SQUASHFS_ROOT/home/kali/.bashrc
        
        sudo mkdir -p $ISO_SQUASHFS_ROOT/root/
        sudo cp -f /tmp/.vimrc $ISO_SQUASHFS_ROOT/root/.vimrc
        sudo cp -f $CUSTOM_RESOURCES_DIR/bashrc $ISO_SQUASHFS_ROOT/root/.bashrc

    - name: Build the image
      run: |
        set -xe
        
        cd $LIVE_BUILD_DIR
        sudo ./build.sh --verbose --variant xfce

    - name: Push to archive.org
      env:   
        SECRET_ARCHIVE_ORG_LOGIN: ${{ secrets.SECRET_ARCHIVE_ORG_LOGIN }}
        SECRET_ARCHIVE_ORG_PASSWORD: ${{ secrets.SECRET_ARCHIVE_ORG_PASSWORD }}
      run: |
        set -xe

        cd /mnt/live-build-config/images/
        /tmp/ia configure --username=$SECRET_ARCHIVE_ORG_LOGIN --password=$SECRET_ARCHIVE_ORG_PASSWORD

        KALI_RELEASE_NAME="kali-iso-maaaaz-edition-$(date '+%Y%m%d')"
        /tmp/ia upload -q $KALI_RELEASE_NAME *.iso --metadata="mediatype:software"
        /tmp/ia upload -q $KALI_RELEASE_NAME *.log --metadata="mediatype:software"
