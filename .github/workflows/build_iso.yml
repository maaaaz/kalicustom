name: Kali VM customization build script (ISO)

on: 
  workflow_dispatch:
      # inputs:
      #   VM_URL:
      #     description: URL of the .7z Kali VM
      #     required: true
      #     default: https://cdimage.kali.org/kali-2024.1/kali-linux-2024.1-virtualbox-amd64.7z
        
      #   VM_HASH:
      #     description: Expected SHA256 hash 
      #     required: true
      #     default: 80ba5fdd6037f9261a5f49a7f18a0abb231551a1aec2d97da2344c2a0e72ced8

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install prerequisites
      run: |
        set -xe
        
        # silence APT
        APT_PARAMS='sudo apt -y -qq -o=Dpkg::Use-Pty=0'
        #$APT_PARAMS update && $APT_PARAMS install p7zip-full kpartx unzip zip qemu-utils axel virtualbox
        $APT_PARAMS update && $APT_PARAMS install git live-build simple-cdd cdebootstrap curl

        cd /tmp/

        #################################################################################################################
        # patching debootstrap because it is buggy on Ubuntu Jammy 22.04
        wget -nv "http://ports.ubuntu.com/pool/main/d/debootstrap/debootstrap_1.0.134ubuntu1_all.deb" -O debootstrap.deb
        sudo dpkg -i ./debootstrap.deb
        #################################################################################################################

        wget -nv "https://archive.kali.org/kali/pool/main/l/live-build/live-build_20230502%2Bkali4_all.deb" -O live_build.deb
        wget -nv "https://http.kali.org/pool/main/k/kali-archive-keyring/kali-archive-keyring_2024.1_all.deb" -O kali_keyring.deb
        sudo dpkg -i ./live_build.deb
        sudo dpkg -i ./kali_keyring.deb

        wget -nv "https://archive.org/download/ia-pex/ia" -O "./ia"
        sudo chmod +x "./ia"

        wget -nv "https://github.com/maaaaz/dotfiles/raw/master/.vimrc" -O ".vimrc"

    - name: Prepare environment
      run: |
        set -xe
        
        cd /usr/share/debootstrap/scripts/
        (echo "default_mirror http://http.kali.org/kali"; sed -e "s/debian-archive-keyring.gpg/kali-archive-keyring.gpg/g" sid) > /tmp/kali
        sudo mv /tmp/kali .
        #sudo ln -s kali kali-rolling

        cd /mnt/
        sudo git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git live-build-config

        # changing boot splashscreen
        sudo cp -f $GITHUB_WORKSPACE/_resources/splash.png /mnt/live-build-config/kali-config/common/bootloaders/grub-pc/splash.png
        
        # executing chrooted scripts
        sudo cp -f $GITHUB_WORKSPACE/_resources/customization.chroot /mnt/live-build-config/kali-config/common/hooks/live/customization.chroot
       
        # placing files in the ISO
        sudo cp -f $GITHUB_WORKSPACE/_resources/0031-kali-user-setup /mnt/live-build-config/kali-config/common/includes.chroot/usr/lib/live/config/0031-kali-user-setup
        sudo cp -f $GITHUB_WORKSPACE/_resources/inputrc /mnt/live-build-config/kali-config/common/includes.chroot/etc/inputrc
        
        sudo mkdir -p /mnt/live-build-config/kali-config/common/includes.chroot/home/kali/.config/qterminal.org/
        sudo cp -f $GITHUB_WORKSPACE/_resources/qterminal.ini /mnt/live-build-config/kali-config/common/includes.chroot/home/kali/.config/qterminal.org/qterminal.ini
        
        sudo cp -f /tmp/.vimrc /mnt/live-build-config/kali-config/common/includes.chroot/home/kali/.vimrc
        
        sudo mkdir -p /mnt/live-build-config/kali-config/common/includes.chroot/root/
        sudo cp -f /tmp/.vimrc /mnt/live-build-config/kali-config/common/includes.chroot/root/.vimrc

    - name: Build the image
      run: |
        set -xe
        
        cd /mnt/live-build-config/
        sudo ./build.sh --verbose --variant xfce

    - name: Push to archive.org
      env:   
        SECRET_ARCHIVE_ORG_LOGIN: ${{ secrets.SECRET_ARCHIVE_ORG_LOGIN }}
        SECRET_ARCHIVE_ORG_PASSWORD: ${{ secrets.SECRET_ARCHIVE_ORG_PASSWORD }}
      run: |
        set -xe

        cd /mnt/live-build-config/images/
        /tmp/ia configure --username=$SECRET_ARCHIVE_ORG_LOGIN --password=$SECRET_ARCHIVE_ORG_PASSWORD

        KALI_RELEASE_NAME="kali-iso_maaaaz-edition-$(date '+%Y%m%d')"
        /tmp/ia -q upload $KALI_RELEASE_NAME *.iso --metadata="mediatype:software"
        /tmp/ia -q upload $KALI_RELEASE_NAME *.log --metadata="mediatype:software"
