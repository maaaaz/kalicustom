name: Kali VM customization build script (ISO)

on: 
  workflow_dispatch:
    inputs:
        flavor:
          description: 'Choice of kali metapackage edition according to https://www.kali.org/tools/kali-meta/'
          required: true
          default: 'kali-tools-forensics'
          type: choice
          options:
            - kali-linux-large
            - kali-linux-everything
            - kali-tools-802-11
            - kali-tools-bluetooth
            - kali-tools-crypto-stego
            - kali-tools-database
            - kali-tools-detect
            - kali-tools-exploitation
            - kali-tools-forensics
            - kali-tools-fuzzing
            - kali-tools-gpu
            - kali-tools-hardware
            - kali-tools-identify
            - kali-tools-information-gathering
            - kali-tools-passwords
            - kali-tools-post-exploitation
            - kali-tools-protect
            - kali-tools-recover
            - kali-tools-reporting
            - kali-tools-respond
            - kali-tools-reverse-engineering
            - kali-tools-rfid
            - kali-tools-sdr
            - kali-tools-sniffing-spoofing
            - kali-tools-social-engineering
            - kali-tools-top10
            - kali-tools-voip
            - kali-tools-vulnerability
            - kali-tools-web
            - kali-tools-windows-resources
            - kali-tools-wireless
            
permissions:
  contents: write

jobs:
  build_iso:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Collect and install prerequisites
      run: |
        set -xe
        
        # silence APT
        APT_PARAMS='sudo apt -y -qq -o=Dpkg::Use-Pty=0'
        $APT_PARAMS update && $APT_PARAMS install git live-build simple-cdd cdebootstrap curl

        cd /tmp/

        #################################################################################################################
        # patching debootstrap because it is buggy on Ubuntu Jammy 22.04
        wget -nv "http://ports.ubuntu.com/pool/main/d/debootstrap/debootstrap_1.0.134ubuntu1_all.deb" -O debootstrap.deb
        sudo dpkg -i ./debootstrap.deb
        #################################################################################################################

        wget -nv "https://archive.kali.org/kali/pool/main/l/live-build/live-build_20230502%2Bkali4_all.deb" -O live_build.deb
        wget -nv "https://http.kali.org/pool/main/k/kali-archive-keyring/kali-archive-keyring_2024.1_all.deb" -O kali_keyring.deb
        sudo dpkg -i ./live_build.deb
        sudo dpkg -i ./kali_keyring.deb

        wget -nv "https://archive.org/download/ia-pex/ia" -O "./ia"
        sudo chmod +x "./ia"

        wget -nv "https://github.com/maaaaz/dotfiles/raw/master/.vimrc" -O ".vimrc"

    - name: Setup environment variables
      run: |
        set -xe

        CUSTOM_RESOURCES_DIR="$GITHUB_WORKSPACE/_resources"
        echo "CUSTOM_RESOURCES_DIR=$CUSTOM_RESOURCES_DIR" >> $GITHUB_ENV
        
        MNT_ROOT="/mnt"
        echo "MNT_ROOT=$MNT_ROOT" >> $GITHUB_ENV
        
        LIVE_BUILD_DIR="$MNT_ROOT/live-build-config"
        LIVE_BUILD_IMAGES_DIR="$LIVE_BUILD_DIR/images"
        echo "LIVE_BUILD_DIR=$LIVE_BUILD_DIR" >> $GITHUB_ENV
        echo "LIVE_BUILD_IMAGES_DIR=$LIVE_BUILD_IMAGES_DIR" >> $GITHUB_ENV

        DEBOOTSTRAP_SCRIPTS_DIR="/usr/share/debootstrap/scripts"
        echo "DEBOOTSTRAP_SCRIPTS_DIR=$DEBOOTSTRAP_SCRIPTS_DIR" >> $GITHUB_ENV

        SPLASHSCREEN_DIR="$LIVE_BUILD_DIR/kali-config/common/bootloaders/grub-pc"
        echo "SPLASHSCREEN_DIR=$SPLASHSCREEN_DIR" >> $GITHUB_ENV

        LIVE_HOOKS_DIR="$LIVE_BUILD_DIR/kali-config/common/hooks/live"
        echo "LIVE_HOOKS_DIR=$LIVE_HOOKS_DIR" >> $GITHUB_ENV

        ISO_SQUASHFS_ROOT="$LIVE_BUILD_DIR/kali-config/common/includes.chroot"
        echo "ISO_SQUASHFS_ROOT=$ISO_SQUASHFS_ROOT" >> $GITHUB_ENV

        FLAVOR=$(echo "${{ github.event.inputs.flavor }}" | sed -r "s/^kali-(linux|tools)-//g")
        KALI_RELEASE_NAME="kali-iso-maaaaz-edition-$FLAVOR-$(date '+%Y%m%d')"
        KALI_RELEASE_ISO_FNAME="$KALI_RELEASE_NAME.iso"
        KALI_RELEASE_LOG_FNAME="$KALI_RELEASE_NAME.log"
        KALI_RELEASE_ISO_SHA256SUM_FILE=$(readlink -f "$KALI_RELEASE_ISO_FNAME-sha256sum.txt")
        
        echo "KALI_RELEASE_NAME=$KALI_RELEASE_NAME" >> $GITHUB_ENV
        echo "KALI_RELEASE_ISO_FNAME=$KALI_RELEASE_ISO_FNAME" >> $GITHUB_ENV
        echo "KALI_RELEASE_LOG_FNAME=$KALI_RELEASE_LOG_FNAME" >> $GITHUB_ENV
        echo "KALI_RELEASE_ISO_SHA256SUM_FILE=$KALI_RELEASE_ISO_SHA256SUM_FILE" >> $GITHUB_ENV
        

    - name: Prepare environment
      run: |
        set -xe
        
        cd $DEBOOTSTRAP_SCRIPTS_DIR
        (echo "default_mirror http://http.kali.org/kali"; sed -e "s/debian-archive-keyring.gpg/kali-archive-keyring.gpg/g" sid) > /tmp/kali
        sudo mv /tmp/kali .

        cd $MNT_ROOT
        sudo git clone "https://gitlab.com/kalilinux/build-scripts/live-build-config.git" $LIVE_BUILD_DIR

        # setup flavor packages
        echo "${{ github.event.inputs.flavor }}" | sudo tee -a "$LIVE_BUILD_DIR/kali-config/variant-default/package-lists/kali.list.chroot"
        echo "[+] cat '$LIVE_BUILD_DIR/kali-config/variant-default/package-lists/kali.list.chroot'"
        cat "$LIVE_BUILD_DIR/kali-config/variant-default/package-lists/kali.list.chroot"
        echo "------------"
        
        # changing boot splashscreen
        sudo cp -f $CUSTOM_RESOURCES_DIR/splash.png $SPLASHSCREEN_DIR/splash.png
        
        # placing chrooted scripts
        sudo cp -f $CUSTOM_RESOURCES_DIR/customization.chroot $LIVE_HOOKS_DIR/customization.chroot
       
        # placing files in the ISO
        sudo cp -f $CUSTOM_RESOURCES_DIR/0031-kali-user-setup $ISO_SQUASHFS_ROOT/usr/lib/live/config/0031-kali-user-setup
        sudo cp -f $CUSTOM_RESOURCES_DIR/inputrc $ISO_SQUASHFS_ROOT/etc/inputrc

        ## qterminal
        sudo mkdir -p $ISO_SQUASHFS_ROOT/home/kali/.config/qterminal.org/
        sudo cp -f $CUSTOM_RESOURCES_DIR/qterminal.ini $ISO_SQUASHFS_ROOT/home/kali/.config/qterminal.org/qterminal.ini

        ## vimrc + bashrc in kali and root user homes
        sudo cp -f /tmp/.vimrc $ISO_SQUASHFS_ROOT/home/kali/.vimrc
        sudo cp -f $CUSTOM_RESOURCES_DIR/bashrc $ISO_SQUASHFS_ROOT/home/kali/.bashrc
        
        sudo mkdir -p $ISO_SQUASHFS_ROOT/root/
        sudo cp -f /tmp/.vimrc $ISO_SQUASHFS_ROOT/root/.vimrc
        sudo cp -f $CUSTOM_RESOURCES_DIR/bashrc $ISO_SQUASHFS_ROOT/root/.bashrc

    - name: Build the image
      run: |
        set -xe
        
        cd $LIVE_BUILD_DIR
        sudo ./build.sh --verbose --live --variant xfce

    - name: Compute hash
      run: |
        set -xe

        cd $LIVE_BUILD_DIR
        OLD_ISO_FNAME=$(sudo ./build.sh --get-image-path --live --variant xfce)
        OLD_LOG_FNAME=$(sudo basename $OLD_ISO_FNAME .iso).log
        
        cd $LIVE_BUILD_IMAGES_DIR
        sudo mv -f $OLD_ISO_FNAME $KALI_RELEASE_ISO_FNAME
        sudo ls -alh $KALI_RELEASE_ISO_FNAME
        
        sudo mv -f $OLD_LOG_FNAME $KALI_RELEASE_LOG_FNAME
        sudo ls -alh $KALI_RELEASE_LOG_FNAME

        KALI_RELEASE_LOG_FNAME_PATH=$(readlink -f $KALI_RELEASE_LOG_FNAME)
        echo "KALI_RELEASE_LOG_FNAME_PATH=$KALI_RELEASE_LOG_FNAME_PATH" >> $GITHUB_ENV

        time sudo sha256sum --tag $KALI_RELEASE_ISO_FNAME | sudo tee $KALI_RELEASE_ISO_SHA256SUM_FILE
        sudo ls -alh $KALI_RELEASE_SHA256SUM_FILE

    - name: Push to archive.org and prepare the Github release
      env:   
        SECRET_ARCHIVE_ORG_LOGIN: ${{ secrets.SECRET_ARCHIVE_ORG_LOGIN }}
        SECRET_ARCHIVE_ORG_PASSWORD: ${{ secrets.SECRET_ARCHIVE_ORG_PASSWORD }}
      run: |
        set -xe

        cd $LIVE_BUILD_IMAGES_DIR
        /tmp/ia configure --username=$SECRET_ARCHIVE_ORG_LOGIN --password=$SECRET_ARCHIVE_ORG_PASSWORD

        /tmp/ia upload -q $KALI_RELEASE_NAME $KALI_RELEASE_ISO_FNAME --metadata="mediatype:software"
        /tmp/ia upload -q $KALI_RELEASE_NAME $KALI_RELEASE_LOG_FNAME --metadata="mediatype:texts"
        /tmp/ia upload -q $KALI_RELEASE_NAME $KALI_RELEASE_ISO_SHA256SUM_FILE --metadata="mediatype:texts"

        KALI_RELEASE_NOTES="/tmp/$KALI_RELEASE_NAME-notes.txt"
        echo "KALI_RELEASE_NOTES=$KALI_RELEASE_NOTES" >> $GITHUB_ENV
        echo -e "Download the ISO file at https://archive.org/details/$KALI_RELEASE_NAME\n" > $KALI_RELEASE_NOTES
        cat $KALI_RELEASE_ISO_SHA256SUM_FILE >> $KALI_RELEASE_NOTES

    - name: Create a new Github release
      uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 #v2.0.4
      with:
        body_path: ${{ env.KALI_RELEASE_NOTES }}
        name: ${{ env.KALI_RELEASE_NAME }}
        tag_name: ${{ env.KALI_RELEASE_NAME }}
        files: |
          ${{ env.KALI_RELEASE_ISO_SHA256SUM_FILE }}
          ${{ env.KALI_RELEASE_LOG_FNAME_PATH }}
